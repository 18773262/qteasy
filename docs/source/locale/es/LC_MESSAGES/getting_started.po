# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Jackie PENG
# This file is distributed under the same license as the qteasy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qteasy 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-04 20:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/getting_started.md:1
msgid "QTEASY快速上手指南"
msgstr "Guía de inicio rápido de QTEASY"

#: ../../source/getting_started.md:3
msgid "安装及依赖"
msgstr "Instalación y dependencias"

#: ../../source/getting_started.md:5
msgid "通过`pip`安装"
msgstr "Instalación mediante `pip`"

#: ../../source/getting_started.md:11
msgid "python 版本"
msgstr "Versión de Python"

#: ../../source/getting_started.md:12
msgid "*`python` version >= 3.6, <3.13*"
msgstr "*`python` versión >= 3.6, <3.13*"

#: ../../source/getting_started.md:14
msgid "安装依赖包"
msgstr "Instalación de paquetes de dependencias"

#: ../../source/getting_started.md:16
msgid "`qteasy`所有必要的依赖包都可以在`pip`安装的同时安装好，但某些特殊情况下，您需要在安装时指定可选依赖包，以便在安装`qteasy`时同时安装，或者手动安装依赖包："
msgstr "`qteasy` todos los paquetes de dependencias necesarios se pueden instalar al mismo tiempo que `pip`, pero en algunos casos especiales, es posible que necesite especificar paquetes de dependencias opcionales al instalar `qteasy` para instalar al mismo tiempo, o instalar manualmente los paquetes de dependencias:"

#: ../../source/getting_started.md:18
msgid "**`pymysql`**, 从`v1.4`开始，`pymysql`以及`db-utils`已经成为`qteasy`的默认依赖包，无需额外安装"
msgstr "**`pymysql`**, Desde `v1.4`, `pymysql` y `db-utils` se han convertido en paquetes de dependencias predeterminados de `qteasy`, no es necesario instalarlos por separado"

#: ../../source/getting_started.md:20
msgid ""
"**`pyarrow`**, "
"用于操作`feather`文件，将本地数据存储为`feather`文件，`pyarrow`可以在安装`qteasy`时自动安装，也可以手动安装："
msgstr ""
"**`pyarrow`**, "
"para operar archivos `feather`, almacenar datos locales como archivos `feather`, `pyarrow` se puede instalar automáticamente al instalar `qteasy`, o se puede instalar manualmente:"

#: ../../source/getting_started.md:25
msgid ""
"**`pytables`**, "
"用于操作`HDF`文件，将本地数据存储到`HDF`文件，`pytables`不能自动安装，需要使用`conda`手动安装`pytables`："
msgstr ""
"**`pytables`**, "
"para operar archivos `HDF`, almacenar datos locales en archivos `HDF`, `pytables` no se puede instalar automáticamente, necesita instalar `pytables` manualmente con `conda`:"

#: ../../source/getting_started.md:29
msgid ""
"**`ta-lib`**, 以便使用所有的内置交易策略，下面的方法可以安装`ta-lib API`，但它还依赖C语言的`TA-"
"Lib`包，安装方法请参考[FAQ](https://qteasy.readthedocs.io/zh/latest/faq.html#id2)"
msgstr ""
"**`ta-lib`**, para usar todas las estrategias de trading integradas, el siguiente método puede instalar `ta-lib API`, pero también depende del paquete `TA-"
"Lib` en C, consulte el método de instalación en [FAQ](https://qteasy.readthedocs.io/zh/latest/faq.html#id2)"

#: ../../source/getting_started.md:34
msgid "10分钟了解qteasy的功能"
msgstr "Conozca las funciones de qteasy en 10 minutos"

#: ../../source/getting_started.md:36
msgid "导入`qteasy`"
msgstr "Importar `qteasy`"

#: ../../source/getting_started.md:37
msgid "基本的模块导入方法如下"
msgstr "La forma básica de importar módulos es la siguiente"

#: ../../source/getting_started.md:44
msgid "配置本地数据源和tushare token"
msgstr "Configurar la fuente de datos local y el token de tushare"

#: ../../source/getting_started.md:46
msgid "为了使用`qteasy`，需要大量的金融历史数据，所有的历史数据都必须首先保存在本地，如果本地没有历史数据，那么`qteasy`的许多功能就无法执行。"
msgstr "Para usar `qteasy`, se necesita una gran cantidad de datos históricos financieros, todos los datos históricos deben guardarse primero localmente, si no hay datos históricos locales, muchas funciones de `qteasy` no se pueden ejecutar."

#: ../../source/getting_started.md:48
msgid ""
"`qteasy`可以通过`tushare`金融数据包来获取大量的金融数据，用户需要自行申请`API "
"Token`，获取相应的权限和积分（详情参考：https://tushare.pro/document/2）"
msgstr ""
"`qteasy` puede obtener una gran cantidad de datos financieros a través del paquete de datos financieros `tushare`, los usuarios deben solicitar un `API "
"Token`, obtener los permisos y puntos correspondientes (consulte los detalles en: https://tushare.pro/document/2)"

#: ../../source/getting_started.md:50
msgid "因此，在使用`qteasy`之前需要对本地数据源和`tushare`进行必要的配置。在`QT_ROOT_PATH/qteasy/`路径下打开配置文件`qteasy.cfg`，可以看到下面内容："
msgstr "Por lo tanto, antes de usar `qteasy`, es necesario configurar la fuente de datos local y `tushare`. Abra el archivo de configuración `qteasy.cfg` en la ruta `QT_ROOT_PATH/qteasy/`, puede ver el siguiente contenido:"

#: ../../source/getting_started.md:59
msgid "配置`tushare token`"
msgstr "Configurar `tushare token`"

#: ../../source/getting_started.md:61
msgid "将你获得的tushare API token添加到配置文件中，如下所示："
msgstr "Agregue el token de API tushare que obtuvo al archivo de configuración, como se muestra a continuación:"

#: ../../source/getting_started.md:67
msgid "配置本地数据源 —— 用MySQL数据库作为本地数据源"
msgstr "Configurar la fuente de datos local - Utilizar una base de datos MySQL como fuente de datos local"

#: ../../source/getting_started.md:68
msgid ""
"默认情况下`qteasy`使用存储在`data/`路径下的`.csv`文件作为数据源，不需要特殊设置。 "
"如果设置使用`mysql`数据库作为本地数据源，在配置文件中添加以下配置："
msgstr ""
"De forma predeterminada, `qteasy` utiliza archivos `.csv` almacenados en la ruta `data/` como fuente de datos, no es necesario realizar ninguna configuración especial. "
"Si se configura para utilizar una base de datos `mysql` como fuente de datos local, agregue la siguiente configuración al archivo de configuración:"

#: ../../source/getting_started.md:81
msgid "关闭并保存好配置文件后，重新导入`qteasy`，就完成了数据源的配置，可以开始下载数据到本地了。"
msgstr "Después de cerrar y guardar el archivo de configuración, vuelva a importar `qteasy`, la configuración de la fuente de datos está completa, y puede comenzar a descargar datos localmente."

#: ../../source/getting_started.md:83
msgid "下载金融历史数据"
msgstr "Descargar datos históricos financieros"

#: ../../source/getting_started.md:85
msgid ""
"要下载金融价格数据，使用`qt.refill_data_source()`函数。下面的代码下载2021及2022两年内所有股票、所有指数的日K线数据，同时下载所有的股票和基金的基本信息数据。"
" （根据网络速度，下载数据可能需要十分钟左右的时间，如果存储为csv文件，将占用大约200MB的磁盘空间）："
msgstr ""
"Para descargar datos de precios financieros, use la función `qt.refill_data_source()`. El siguiente código descarga los datos de K-line diarios de todas las acciones e índices en 2021 y 2022, y al mismo tiempo descarga los datos de información básica de todas las acciones y fondos. "
" (Según la velocidad de la red, la descarga de datos puede tardar unos diez minutos, y si se almacena como un archivo csv, ocupará aproximadamente 200 MB de espacio en disco):"

#: ../../source/getting_started.md:98
msgid "数据下载到本地后，可以使用`qt.get_history_data()`来获取数据，如果同时获取多个股票的历史数据，每个股票的历史数据会被分别保存到一个`dict`中。"
msgstr "Después de descargar los datos localmente, puede usar `qt.get_history_data()` para obtener los datos. Si obtiene los datos históricos de varias acciones al mismo tiempo, los datos históricos de cada acción se guardarán en un `dict` por separado."

#: ../../source/getting_started.md:106
msgid "运行上述代码会得到一个`Dict`对象，包含两个股票\"000001.SZ\"以及\"000005.SZ\"的K线数据（数据存储为`DataFrame`）："
msgstr "Ejecutar el código anterior devolverá un objeto `Dict` que contiene los datos de K-line de dos acciones \"000001.SZ\" y \"000005.SZ\" (los datos se almacenan como `DataFrame`):"

#: ../../source/getting_started.md:128
#, python-format
msgid "除了价格数据以外，`qteasy`还可以下载并管理包括财务报表、技术指标、基本面数据等在内的大量金融数据，详情请参见[QTEASY教程：金融数据下载及管理](https://github.com/shepherdpp/qteasy/blob/master/tutorials/Tutorial%2002%20-%20金融数据获取及管理.md)"
msgstr "Además de los datos de precios, `qteasy` también puede descargar y administrar una gran cantidad de datos financieros, incluidos informes financieros, indicadores técnicos, datos fundamentales, etc., consulte [QTEASY Tutorial: Descarga y gestión de datos financieros]("

#: ../../source/getting_started.md:130
msgid "股票的数据下载后，使用`qt.candle()`可以显示股票数据K线图。"
msgstr "Después de descargar los datos de las acciones, puede usar `qt.candle()` para mostrar el gráfico de K-line de los datos de las acciones."

#: ../../source/getting_started.md:135
msgid "![png](img/output_5_2.png)"
msgstr ""

#: ../../source/getting_started.md:135 ../../source/getting_started.md:160
#: ../../source/getting_started.md:162 ../../source/getting_started.md:164
#: ../../source/getting_started.md:166 ../../source/getting_started.md:168
#: ../../source/getting_started.md:252 ../../source/getting_started.md:315
#: ../../source/getting_started.md:361 ../../source/getting_started.md:380
#: ../../source/getting_started.md:448 ../../source/getting_started.md:453
msgid "png"
msgstr ""

#: ../../source/getting_started.md:137
msgid ""
"`qteasy`的K线图函数`candle`支持通过六位数股票/指数代码查询准确的证券代码，也支持通过股票、指数名称显示K线图 "
"`qt.candle()`支持功能如下："
msgstr ""
"La función de gráfico de K-line de `qteasy` `candle` admite la consulta de códigos de valores precisos a través de códigos de valores de seis dígitos / índices, y también admite la visualización de gráficos de K-line a través de nombres de valores / índices "
"`qt.candle()` admite las siguientes funciones:"

#: ../../source/getting_started.md:139
msgid "显示股票、基金、期货的K线"
msgstr "Mostrar K-line de acciones, fondos, futuros"

#: ../../source/getting_started.md:140
msgid "显示复权价格"
msgstr "Mostrar precios ajustados"

#: ../../source/getting_started.md:141
msgid "显示分钟、 周或月K线"
msgstr "Mostrar K-line de minutos, semanas o meses"

#: ../../source/getting_started.md:142
msgid "显示不同移动均线以及MACD/KDJ等指标"
msgstr "Mostrar diferentes medias móviles y MACD/KDJ y otros indicadores"

#: ../../source/getting_started.md:144
msgid "详细的用法请参考文档，示例如下(请先使用`qt.refill_data_source()`下载相应的历史数据)："
msgstr "Consulte la documentación para obtener información detallada, aquí hay un ejemplo (primero use `qt.refill_data_source()` para descargar los datos históricos correspondientes):"

#: ../../source/getting_started.md:160
msgid "![png](img/output_3_1.png)"
msgstr ""

#: ../../source/getting_started.md:162
msgid "![png](img/output_7_2.png)"
msgstr ""

#: ../../source/getting_started.md:164
msgid "![png](img/output_8_3.png)"
msgstr ""

#: ../../source/getting_started.md:166
msgid "![png](img/output_3_4.png)"
msgstr ""

#: ../../source/getting_started.md:168
msgid "![png](img/output_3_5.png)"
msgstr ""

#: ../../source/getting_started.md:171
msgid ""
"生成的K线图可以是一个交互式动态K线图（请注意，K线图基于`matplotlib`绘制，在使用不同的终端时，显示功能有所区别，某些终端并不支持 "
"动态图表，详情请参阅 "
"[matplotlib文档](https://matplotlib.org/stable/users/explain/backends.html)"
msgstr ""
"El gráfico de K-line generado puede ser un gráfico de K-line dinámico interactivo (tenga en cuenta que el gráfico de K-line se basa en `matplotlib`, y la función de visualización varía según el terminal utilizado, y algunos terminales no admiten "
"gráficos dinámicos, consulte los detalles "
"[documentación de matplotlib](https://matplotlib.org/stable/users/explain/backends.html)"

#: ../../source/getting_started.md:175
msgid "在使用动态K线图时，用户可以用鼠标和键盘控制K线图的显示范围："
msgstr "Cuando se utiliza un gráfico de K-line dinámico, los usuarios pueden controlar el rango de visualización del gráfico de K-line con el mouse y el teclado:"

#: ../../source/getting_started.md:177
msgid "鼠标在图表上左右拖动：可以移动K线图显示更早或更晚的K线"
msgstr "Arrastrar el ratón hacia la izquierda o hacia la derecha en el gráfico: puede mover el gráfico de K-line para mostrar K-line más tempranos o más tardíos"

#: ../../source/getting_started.md:178
msgid "鼠标滚轮在图表上滚动，可以缩小或放大K线图的显示范围"
msgstr "Desplazar la rueda del ratón en el gráfico: puede acercar o alejar el gráfico de K-line"

#: ../../source/getting_started.md:179
msgid "通过键盘左右方向键，可以移动K线图的显示范围显示更早或更晚的K线"
msgstr "Puede mover el rango de visualización del gráfico de K-line hacia la izquierda o hacia la derecha para mostrar K-line más tempranos o más tardíos con las teclas de flecha izquierda y derecha del teclado"

#: ../../source/getting_started.md:180
msgid "通过键盘上下键，可以缩小或放大K线图的显示范围"
msgstr "Puede acercar o alejar el rango de visualización del gráfico de K-line con las teclas de flecha arriba y abajo del teclado"

#: ../../source/getting_started.md:181
msgid "在K线图上双击鼠标，可以切换不同的均线类型"
msgstr "Doble clic en el gráfico de K-line para cambiar el tipo de media móvil"

#: ../../source/getting_started.md:182
msgid "在K线图的指标区域双击，可以切换不同的指标类型：`MACD`，`RSI`，`DEMA`"
msgstr "Doble clic en el área de indicadores del gráfico de K-line para cambiar el tipo de indicador: `MACD`, `RSI`, `DEMA`"

#: ../../source/getting_started.md:184
msgid "![gif](img/output_dyna_plot.gif)"
msgstr ""

#: ../../source/getting_started.md:184
msgid "gif"
msgstr ""

#: ../../source/getting_started.md:186
msgid "关于`DataSource`对象的更多详细介绍，请参见[qteasy教程](https://github.com/shepherdpp/qteasy/tutorials)"
msgstr "Para obtener más información sobre el objeto `DataSource`, consulte [qteasy Tutorial](tutorials/1-get-started.md)"

#: ../../source/getting_started.md:189
msgid "创建一个投资策略"
msgstr "Crear una estrategia de inversión"

#: ../../source/getting_started.md:191
msgid ""
"`qteasy`中的所有交易策略都是由`qteasy.Operator`（交易员）对象来实现回测和运行的，`Operator`对象是一个策略容器，一个交易员可以同时"
" 管理多个不同的交易策略。"
msgstr ""
"En `qteasy`, todas las estrategias de trading se implementan mediante el objeto `qteasy.Operator` (operador), el objeto `Operator` es un contenedor de estrategias, un operador puede "
" administrar múltiples estrategias de trading diferentes al mismo tiempo."

#: ../../source/getting_started.md:194
msgid "`qteasy`提供了两种方式创建交易策略，详细的说明请参见使用教程："
msgstr "`qteasy` proporciona dos formas de crear estrategias de trading, consulte el tutorial de uso para obtener más información:"

#: ../../source/getting_started.md:196
msgid "**使用内置交易策略组合**"
msgstr "**Usar combinaciones de estrategias de trading integradas**"

#: ../../source/getting_started.md:197
msgid "**通过策略类自行创建策略**"
msgstr "**Crear estrategias por sí mismo a través de la clase de estrategia**"

#: ../../source/getting_started.md:199
msgid "生成一个DMA均线择时交易策略"
msgstr "Generar una estrategia de trading de tiempo de selección de media móvil DMA"

#: ../../source/getting_started.md:200
msgid "在这里，我们将使用一个内置的`DMA`均线择时策略来生成一个最简单的大盘择时交易系统。所有内置交易策略的清单和详细说明请参见文档。"
msgstr "Aquí, usaremos una estrategia de tiempo de selección de media móvil `DMA` integrada para generar un sistema de trading de tiempo de selección de mercado más simple. Consulte la documentación para obtener una lista y descripción detallada de todas las estrategias de trading integradas."

#: ../../source/getting_started.md:202
msgid ""
"创建`Operator`对象时传入参数：`strategies='DMA'`，可以新建一个`DMA`双均线择时交易策略。 "
"创建好`Operator`对象后，可以用`op.info()`来查看它的信息。"
msgstr ""
"Cuando se crea el objeto `Operator` con el parámetro `strategies='DMA'`, se puede crear una nueva estrategia de trading de tiempo de selección de media móvil `DMA`. "
"Después de crear el objeto `Operator`, puede usar `op.info()` para ver su información."

#: ../../source/getting_started.md:211
msgid "现在可以看到`op`中有一个交易策略，ID是`dma`，我们在`Operator`层面设置或修改策略的参数 时，都需要引用这个`ID`。"
msgstr "Ahora puede ver que hay una estrategia de trading en `op`, el ID es `dma`, cuando configuramos o modificamos los parámetros de la estrategia en el nivel de `Operator`, necesitamos hacer referencia a este `ID`."

#: ../../source/getting_started.md:214
msgid "`DMA`是一个内置的均线择时策略，它通过计算股票每日收盘价的快、慢两根移动均线的差值`DMA`与其移动平均值`AMA`之间的交叉情况来确定多空或买卖点。："
msgstr "`DMA` es una estrategia de tiempo de selección de media móvil integrada, que determina los puntos largos o cortos o de compra y venta según la intersección de la diferencia entre las dos medias móviles rápidas y lentas de los precios de cierre diarios de las acciones `DMA` y su valor promedio móvil `AMA`.："

#: ../../source/getting_started.md:216
msgid "使用`qt.built_ins()`函数可以查看`DMA`策略的详细解，使用`qt.built_ins()`函数可以获取或者筛选需要的内置交易策略，例如："
msgstr "Puede ver la descripción detallada de la estrategia `DMA` con la función `qt.built_ins()`, y puede obtener o filtrar las estrategias de trading integradas necesarias con la función `qt.built_ins()`, por ejemplo:"

#: ../../source/getting_started.md:220
msgid "得到："
msgstr "Obtener:"

#: ../../source/getting_started.md:245
msgid ""
"在默认情况下，策略由三个**可调参数**：`(12,26,9)`, "
"但我们可以给出任意大于2小于250的三个整数作为策略的参数，以适应不同交易活跃度的股票、或者适应 不同的策略运行周期。"
msgstr ""
"De forma predeterminada, la estrategia tiene tres **parámetros ajustables**: `(12,26,9)`, "
"pero podemos proporcionar cualquier tres enteros mayores que 2 y menores que 250 como parámetros de la estrategia para adaptarse a acciones con diferentes niveles de actividad de trading, o para adaptarse a diferentes períodos de ejecución de la estrategia."

#: ../../source/getting_started.md:249
msgid "回测并评价交易策略的性能表现"
msgstr "Backtesting y evaluación del rendimiento de la estrategia de trading"

#: ../../source/getting_started.md:250
msgid "`qteasy`可以使用历史数据回测策略表现并输出图表如下："
msgstr "`qteasy` puede usar datos históricos para backtesting y evaluar el rendimiento de la estrategia de trading y generar gráficos como se muestra a continuación:"

#: ../../source/getting_started.md:252
msgid "![png](img/output_14_3.png)"
msgstr ""

#: ../../source/getting_started.md:254
msgid "使用默认参数回测刚才建立的DMA策略在历史数据上的表现，可以使用`op.run(mode=1)`。"
msgstr "Para backtest el rendimiento de la estrategia DMA recién creada en los datos históricos con los parámetros predeterminados, puede usar `op.run(mode=1)`."

#: ../../source/getting_started.md:270
msgid "输出结果如下："
msgstr "Los resultados de salida son los siguientes:"

#: ../../source/getting_started.md:315
msgid "![png](img/output_21_1.png)"
msgstr ""

#: ../../source/getting_started.md:317
msgid "交易策略的参数调优"
msgstr "Optimización de parámetros de la estrategia de trading"

#: ../../source/getting_started.md:319
msgid "交易策略的表现与参数有关，如果输入不同的参数，策略回报相差会非常大。`qteasy`可以用多种不同的优化算法，帮助搜索最优的策略参数，"
msgstr "El rendimiento de la estrategia de trading está relacionado con los parámetros. Si se ingresan diferentes parámetros, la diferencia en el rendimiento de la estrategia será muy grande. `qteasy` puede utilizar varios algoritmos de optimización diferentes para ayudar a buscar los mejores parámetros de la estrategia,"

#: ../../source/getting_started.md:321
msgid "要使用策略优化功能，需要设置交易策略的优化标记`opt_tag=1`，并配置环境变量`mode=2`即可:"
msgstr "Para utilizar la función de optimización de la estrategia, debe configurar la marca de optimización de la estrategia de trading `opt_tag=1` y configurar la variable de entorno `mode=2`."

#: ../../source/getting_started.md:335
msgid ""
"`qteasy`将在同一段历史数据（优化区间）上反复回测，找到结果最好的30组参数，并把这30组参数在另一段历史数据（测试区间）上进行独立测试，并显"
" 示独立测试的结果："
msgstr ""
"`qteasy` realizará backtesting repetido en el mismo conjunto de datos históricos (rango de optimización) para encontrar las 30 mejores combinaciones de parámetros, y probará estas 30 combinaciones de parámetros en otro conjunto de datos históricos (rango de prueba) de forma independiente, y mostrará los resultados de la prueba independiente:"

#: ../../source/getting_started.md:361
msgid "![png](img/output_24_1.png)    将优化后的参数应用到策略中，并再次回测，可以看到结果明显提升："
msgstr ""

#: ../../source/getting_started.md:378
msgid "结果如下："
msgstr "Los resultados son los siguientes:"

#: ../../source/getting_started.md:380
msgid "![png](img/output_26_1.png)"
msgstr ""

#: ../../source/getting_started.md:382
msgid "关于策略优化结果的更多解读、以及更多优化参数的介绍，请参见详细文档"
msgstr "Para obtener más información sobre la interpretación de los resultados de la optimización de la estrategia y más información sobre la optimización de parámetros, consulte la documentación detallada"

#: ../../source/getting_started.md:384
msgid "部署并开始交易策略的实盘运行"
msgstr "Implementación y ejecución en vivo de la estrategia de trading"

#: ../../source/getting_started.md:386
msgid "在配置好`Operator`对象并设置好策略后，`qteasy`可以自动定期运行、自动盯盘、自动下载实时数据并根据策略结果生成交易指令，模拟交易过程并记录交易结果。"
msgstr "Después de configurar el objeto `Operator` y configurar la estrategia, `qteasy` puede ejecutarse automáticamente periódicamente, monitorear automáticamente, descargar datos en tiempo real automáticamente y generar instrucciones de trading según los resultados de la estrategia, simular el proceso de trading y registrar los resultados de trading."

#: ../../source/getting_started.md:388
msgid "`Qteasy`的实盘一旦启动，就会在`terminal`中启动一个单独的线程在后台运行，运行的时机也是跟真实的股票市场一致的，股票市场收市的时候不运行，交易日早上9点15分唤醒系统开始拉取实时股价，9点半开始运行交易策略，交易策略的运行时机和运行频率在策略的属性中设置。如果策略运行的结果产生交易信号，则根据交易信号模拟挂单，挂单成交后修改响应账户资金和股票持仓，交易费用按照设置中的费率扣除。如果资金不足或持仓不足会导致交易失败，当天买入的股票同真实市场一样T+1交割，第二个交易日开始前交割完毕。"
msgstr "Una vez que se inicia el trading en vivo de `Qteasy`, se ejecutará un hilo separado en segundo plano en el `terminal`, y el momento de ejecución es consistente con el mercado de valores real, no se ejecutará cuando el mercado de valores esté cerrado, el sistema se activará para obtener los precios de las acciones en tiempo real a las 9:15 a.m., y comenzará a ejecutar la estrategia de trading a las 9:30 a.m., el momento y la frecuencia de ejecución de la estrategia de trading se establecen en las propiedades de la estrategia. Si la estrategia de trading genera señales de trading, se simularán órdenes según las señales de trading, y una vez que se ejecuten las órdenes, se modificarán los fondos y las posiciones de las acciones de la cuenta correspondiente, y se deducirán las tarifas de trading según la tasa establecida. Si no hay suficientes fondos o posiciones, la operación fallará, las acciones compradas el mismo día se liquidarán T+1, y se liquidarán antes del segundo día de trading."

#: ../../source/getting_started.md:420
msgid "完成上述设置后，使用下面的代码运行交易策略。"
msgstr "Después de completar la configuración anterior, use el siguiente código para ejecutar la estrategia de trading."

#: ../../source/getting_started.md:422
msgid ""
"`Qteasy`的实盘运行使用了“账户”的概念，就跟您在股票交易市场开户一样，一个账户可以有自己的持有资金，股票持仓，单独计算盈亏。运行过程中您可以随时终止程序，这时所有的交易记录都会保存下来，下次重新启动时，只要引用上一次运行使用的账户ID（account"
" "
"ID）就可以从上次中断的地方继续运行了，包括交易策略的参数等信息都会从上次停止的地方重新启动，因此启动时需要指定账户，如果不想继续上次的账户，可以新开一个账户运行，或者删除当前账户下的所有记录重新开始交易。"
msgstr ""
"`Qteasy` utiliza el concepto de \"cuenta\" para el trading en vivo, al igual que abrir una cuenta en el mercado de valores, una cuenta puede tener su propio capital, posiciones de acciones, y calcular las ganancias y pérdidas por separado. Puede detener el programa en cualquier momento durante la ejecución, y todos los registros de trading se guardarán, la próxima vez que lo inicie, solo necesita hacer referencia al ID de cuenta (account"
" "
"ID) utilizado la última vez para continuar desde donde se detuvo la última vez, incluidos los parámetros de la estrategia de trading y otra información se reiniciarán desde donde se detuvieron la última vez, por lo tanto, necesita especificar la cuenta al iniciar, si no desea continuar con la cuenta anterior, puede abrir una nueva cuenta para ejecutar, o eliminar todos los registros de la cuenta actual y comenzar de nuevo."


#: ../../source/getting_started.md:424
msgid "在启动实盘时可以通过`qteasy`的系统配置变量`live_trade_account_name`来指定使用的账户名，系统会自动创建一个新的账户并赋予账户ID；如果想要使用已有的账户，可以在启动时通过`live_trade_account_id`指定账户ID。"
msgstr "Al iniciar el trading en vivo, puede especificar el nombre de la cuenta que se utilizará mediante la variable de configuración del sistema `live_trade_account_name` de `qteasy`, el sistema creará automáticamente una nueva cuenta y le asignará un ID de cuenta; si desea utilizar una cuenta existente, puede especificar el ID de cuenta al iniciar mediante `live_trade_account_id`."

#: ../../source/getting_started.md:437
msgid ""
"如果您希望通过命令行方式在Terminal中启动`qteasy`并直接开始实盘交易，您可以创建一个脚本文件，并在Terminal中通过命令行启动交易。"
" "
"`qteasy`提供了几个实盘交易脚本文件的示例，您可以在`qteasy`的安装目录下的`examples`文件夹中找到这些脚本文件，并使用下面的命令启动实盘交易："
msgstr ""
"Si desea iniciar el trading en vivo de `qteasy` a través de la línea de comandos en el Terminal y comenzar a operar en vivo directamente, puede crear un archivo de script y iniciar el trading a través de la línea de comandos en el Terminal. "
"`qteasy` proporciona varios ejemplos de scripts de trading en vivo, puede encontrar estos archivos de script en la carpeta `examples` en el directorio de instalación de `qteasy`, y puede iniciar el trading en vivo con el siguiente comando:"

#: ../../source/getting_started.md:444
msgid "上面的命令将启动一个实盘交易，使用账户ID为18，使用CLI界面监控实盘交易。"
msgstr "El comando anterior iniciará un trading en vivo, utilizando el ID de cuenta 18, y monitoreará el trading en vivo a través de la interfaz de línea de comandos."

#: ../../source/getting_started.md:446
msgid "`qteasy`提供了两种不同的用户界面以运行实盘交易："
msgstr "`qteasy` proporciona dos interfaces de usuario diferentes para ejecutar trading en vivo:"

#: ../../source/getting_started.md:448
msgid ""
"**`TraderShell`** 交互式命令行界面，可以在命令行中输入命令，查看交易日志、查看持仓、查看账户资金变化等信息： "
"![png](img/output_27_1.png)   ![png](img/output_27_3.png)"
msgstr ""
"**`TraderShell`** 交互式命令行界面，可以在命令行中输入命令，查看交易日志、查看持仓、查看账户资金变化等信息： "
"![png](img/output_27_1.png)   ![png](img/output_27_3.png)"

#: ../../source/getting_started.md:453
msgid ""
"**`TraderApp`** (v1.2.0新增) 交互式图形界面，可以在图形界面中查看交易日志、查看持仓、查看账户资金变化等信息 "
"![png](examples/img/trader_app_light_theme.png)  "
"![png](examples/img/trader_app_2.png)"
msgstr ""
"**`TraderApp`** (añadido en v1.2.0) Interfaz gráfica interactiva, puede ver el registro de trading, ver las posiciones, ver los cambios en los fondos de la cuenta, etc. en la interfaz gráfica "
"![png](examples/img/trader_app_light_theme.png)  "
"![png](examples/img/trader_app_2.png)"

#: ../../source/getting_started.md:457
msgid "上面两种方式都可以在实盘运行时使用，根据`qteasy`的配置参数进入不同的交互界，关于更多实盘运行的介绍，请参见[`QTEASY`文档](https://qteasy.readthedocs.io)"
msgstr "Ambos métodos anteriores se pueden utilizar durante el trading en vivo, y se puede acceder a diferentes interfaces interactivas según los parámetros de configuración de `qteasy`, para obtener más información sobre el trading en vivo, consulte la [documentación de `QTEASY`](https://qteasy.readthedocs.io)"

#~ msgid ""
#~ "`qteasy`中的所有交易策略都是由`qteast.Operator`（交易员）对象来实现回测和运行的，`Operator`对象是一个策略容器，一个交易员可以同时"
#~ " 管理多个不同的交易策略。"
#~ msgstr ""

#~ msgid "`queasy`提供了两种方式创建交易策略，详细的说明请参见使用教程："
#~ msgstr ""

