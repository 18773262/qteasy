# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Jackie PENG
# This file is distributed under the same license as the qteasy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qteasy 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-03 20:50+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/tutorials/4-build-in-strategies.md:1
msgid "拼搭出一个比较复杂的策略"
msgstr "Use built-in strategies"

#: ../../source/tutorials/4-build-in-strategies.md:3
msgid "`qteasy`是一个完全本地化部署和运行的量化交易分析工具包，具备以下功能："
msgstr "`qteasy` is a fully localized deployment and operation of quantitative trading analysis toolkit, with the following functions:"

#: ../../source/tutorials/4-build-in-strategies.md:5
msgid "金融数据的获取、清洗、存储以及处理、可视化、使用"
msgstr "Access, clean, store, process, visualize, and use financial data"

#: ../../source/tutorials/4-build-in-strategies.md:6
msgid "量化交易策略的创建，并提供大量内置基本交易策略"
msgstr "Create quantitative trading strategies and provide a large number of built-in basic trading strategies"

#: ../../source/tutorials/4-build-in-strategies.md:7
msgid "向量化的高速交易策略回测及交易结果评价"
msgstr "Vectorized high-speed trading strategy backtesting and trading result evaluation"

#: ../../source/tutorials/4-build-in-strategies.md:8
msgid "交易策略参数的优化以及评价"
msgstr "Optimization and evaluation of trading strategy parameters"

#: ../../source/tutorials/4-build-in-strategies.md:9
msgid "交易策略的部署、实盘运行"
msgstr "Deployment and live operation of trading strategies"

#: ../../source/tutorials/4-build-in-strategies.md:11
msgid "通过本系列教程，您将会通过一系列的实际示例，充分了解`qteasy`的主要功能以及使用方法。"
msgstr "By this series of tutorials, you will fully understand the main functions and usage of `qteasy` through a series of practical examples."

#: ../../source/tutorials/4-build-in-strategies.md:13
msgid "开始前的准备工作"
msgstr "Before you start"

#: ../../source/tutorials/4-build-in-strategies.md:15
msgid "在开始本节教程前，请先确保您已经掌握了下面的内容："
msgstr "Before starting this tutorial, make sure you have mastered the following:"

#: ../../source/tutorials/4-build-in-strategies.md:17
msgid "安装、配置`qteasy` —— 详情请参阅[QTEASY教程1](1-get-started.md)"
msgstr "Install and configure `qteasy` —— details please refer to [QTEASY tutorial 1](1-get-started.md)"

#: ../../source/tutorials/4-build-in-strategies.md:18
msgid ""
"设置了一个本地数据源，并已经将足够的历史数据下载到本地（包括交易日历、股票/基金/指数基本信息、股票/基金/指数的价格数据以及财务指标或其他财务数据——详情请参阅[QTEASY教程2](2"
"-get-data.md)"
msgstr ""
"Set up a local data source and have downloaded enough historical data locally (including trading calendars, basic information of stocks/funds/indices, price data of stocks/funds/indices, and financial indicators or other financial data —— details please refer to [QTEASY tutorial 2](2-get-data.md)"

#: ../../source/tutorials/4-build-in-strategies.md:19
msgid ""
"学会创建交易员对象，使用一个内置交易策略并回测其历史表现，检查回测日志、明白如何调整策略的运行参数或可调参数，改进策略的表现——[QTEASY教程3](3"
"-start-first-strategy.md)"
msgstr ""
"Learn to create a trader object, use a built-in trading strategy and backtest its historical performance, check the backtest log, understand how to adjust the running parameters or adjustable parameters of the strategy, and improve the performance of the strategy —— [QTEASY tutorial 3](3-start-first-strategy.md)"

#: ../../source/tutorials/4-build-in-strategies.md:21
msgid "在[QTEASY文档](https://qteasy.readthedocs.io/zh/latest/)中，还能找到更多关于如何创建交易员对象运行策略，使用历史数据回测策略，检查回测交易记录，修改策略等等相关内容。对`qteasy`的基本使用方法还不熟悉的同学，可以移步那里查看更多详细说明。"
msgstr "In the [QTEASY documentation](https://qteasy.readthedocs.io/zh/latest/), you can find more information about how to create a trader object to run a strategy, backtest a strategy using historical data, check backtest trading records, modify a strategy, and so on. Students who are not familiar with the basic usage of `qteasy` can go there to see more detailed instructions."

#: ../../source/tutorials/4-build-in-strategies.md:23
msgid "本节的目标"
msgstr "Target of this chapter"

#: ../../source/tutorials/4-build-in-strategies.md:25
msgid "在本节中，我们将了解如果使用`qteasy`中更多的内置策略，如何使交易员同时运行多个交易策略，如何使用策略混合器`blender`来使用交易策略生成不同的组合策略，"
msgstr "In this chapter, we will learn how to use more built-in strategies in `qteasy`, how to make a trader run multiple trading strategies at the same time, and how to use the strategy mixer `blender` to generate different combination strategies using trading strategies."

#: ../../source/tutorials/4-build-in-strategies.md:28
msgid ""
"目前`qteasy`支持超过70种内置交易策略，全部都是开箱即用，完整的内置交易策略清单请参见[参考文档](../references/4"
"-build-in-strategy-blender.md)："
msgstr ""
"At present, `qteasy` supports more than 70 built-in trading strategies, all of which are ready to use. For a complete list of built-in trading strategies, please refer to [reference documents](../references/4-build-in-strategy-blender.md):"

#: ../../source/tutorials/4-build-in-strategies.md:34
msgid "打印如下信息："
msgstr "Following information will be printed:"

#: ../../source/tutorials/4-build-in-strategies.md:58
msgid ""
"下面清单罗列了部分`qteasy`内置开箱即用的交易策略，完整的清单请参见[参考文档](../references/4-build-in-"
"strategy-blender.md)"
msgstr ""
"The following list lists some of the built-in trading strategies that are ready to use in `qteasy`. For a complete list, please refer to [reference documents](../references/4-build-in-strategy-blender.md)"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "ID"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "策略名称"
msgstr "Name"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "说明"
msgstr "Description"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`crossline`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`TimingCrossline`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"crossline择时策略类，利用长短均线的交叉确定多空状态<br "
"/>1，当短均线位于长均线上方，且距离大于l\\*m%时，设置仓位目标为1<br "
"/>2，当短均线位于长均线下方，且距离大于l\\*m%时，设置仓位目标为-1<br "
"/>3，当长短均线之间的距离不大于l\\*m%时，设置仓位目标为0"
msgstr ""
"crossline timing strategy class, using the cross of long and short moving averages to determine the long and short states<br "
"/>1. When the short moving average is above the long moving average and the distance is greater than l\\*m%, set the position target to 1<br "
"/>2. When the short moving average is below the long moving average and the distance is greater than l\\*m%, set the position target to -1<br "
"/>3. When the distance between the long and short moving averages is not greater than l\\*m%, set the position target to 0"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`macd`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`TimingMACD`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"MACD择时策略类，运用MACD均线策略，生成目标仓位百分比:<br />1，当MACD值大于0时，设置仓位目标为1<br "
"/>2，当MACD值小于0时，设置仓位目标为0"
msgstr ""
"MACD timing strategy class, using the MACD moving average strategy to generate the target position percentage:<br />1. When the MACD value is greater than 0, set the position target to 1<br "
"/>2. When the MACD value is less than 0, set the position target to 0"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`dma`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`TimingDMA`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"DMA择时策略<br />1， DMA在AMA上方时，多头区间，即DMA线自下而上穿越AMA线后，输出为1<br />2， "
"DMA在AMA下方时，空头区间，即DMA线自上而下穿越AMA线后，输出为0"
msgstr ""
"DMA timing strategy<br />1. When DMA is above AMA, it is a long interval, that is, after the DMA line crosses the AMA line from bottom to top, the output is 1<br />2. "
"When DMA is below AMA, it is a short interval, that is, after the DMA line crosses the AMA line from top to bottom, the output is 0"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`trix`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`TimingTRIX`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"TRIX择时策略，使用股票价格的三重平滑指数移动平均价格进行多空判断:<br "
"/>计算价格的三重平滑指数移动平均价TRIX，再计算M日TRIX的移动平均：<br />1， "
"TRIX位于MATRIX上方时，设置仓位目标为1<br />2， TRIX位于MATRIX下方时，设置仓位目标位-1"
msgstr ""
"TRIX timing strategy, using the triple-smoothed exponential moving average price of the stock price for long and short judgment:<br "
"/>Calculate the triple-smoothed exponential moving average price TRIX of the price, and then calculate the moving average of the M-day TRIX:<br />1. "
"When TRIX is above MATRIX, set the position target to 1<br />2. When TRIX is below MATRIX, set the position target to -1"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`cdl`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`TimingCDL`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"CDL择时策略，在K线图中找到符合要求的cdldoji模式<br "
"/>搜索历史数据窗口内出现的cdldoji模式（匹配度0～100之间），加总后/100，计算 等效cdldoji匹配数量，以匹配数量为交易信号。"
msgstr ""
"CDL timing strategy, find the cdldoji pattern that meets the requirements in the K-line chart<br "
"/>Search for the cdldoji pattern that appears in the historical data window (between 0 and 100), sum it up/100, calculate the equivalent cdldoji matching quantity, and use the matching quantity as the trading signal."

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`bband`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`TimingBBand`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"布林带线交易策略，根据股价与布林带上轨和布林带下轨之间的关系确定多空，在价格上穿或下穿布林带线上下轨时产生交易信号。布林带线的均线类型不可选<br"
" />1，当价格上穿上轨时，产生全仓买入信号<br />2，当价格下穿下轨时，产生全仓卖出信号"
msgstr ""
"Bollinger Band trading strategy, determine long and short positions based on the relationship between stock prices and Bollinger Band upper and lower bands, and generate trading signals when prices cross above or below the Bollinger Band lines. The moving average type of the Bollinger Band line cannot be selected<br"
" />1. When the price crosses above the upper band, a full position buy signal is generated<br />2. When the price crosses below the lower band, a full position sell signal is generated"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`s-bband`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`SoftBBand`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"布林带线渐进交易策略，根据股价与布林带上轨和布林带下轨之间的关系确定多空，交易信号不是一次性产生的，而是逐步渐进买入和卖出。计算BBAND，检查价格是否超过BBAND的上轨或下轨：<br"
" />1，当价格大于上轨后，每天产生10%的比例买入交易信号<br />2，当价格低于下轨后，每天产生33%的比例卖出交易信号"
msgstr ""
"Bollinger Band progressive trading strategy, determine long and short positions based on the relationship between stock prices and Bollinger Band upper and lower bands, and trading signals are not generated all at once, but gradually buy and sell. Calculate BBAND, check whether the price exceeds the upper or lower band of BBAND:<br"
" />1. After the price is greater than the upper band, a 10% proportional buy signal is generated every day<br />2. After the price is lower than the lower band, a 33% proportional sell signal is generated every day"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sarext`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`TimingSAREXT`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "扩展抛物线SAR策略，当指标大于0时发出买入信号，当指标小于0时发出卖出信号"
msgstr "Extended Parabolic SAR strategy, buy signal is issued when the index is greater than 0, and sell signal is issued when the index is less than 0"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`ssma`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`SCRSSMA`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "单均线交叉策略——SMA均线(简单移动平均线)：根据股价与SMA均线的相对位置设定持仓比例"
msgstr "Single moving average cross strategy —— SMA moving average (simple moving average): set the position ratio according to the relative position of the stock price and the SMA moving average"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sdema`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`SCRSDEMA`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "单均线交叉策略——DEMA均线(双重指数平滑移动平均线)：根据股价与DEMA均线的相对位置设定持仓比例"
msgstr "Single moving average cross strategy —— DEMA moving average (double exponential smoothing moving average): set the position ratio according to the relative position of the stock price and the DEMA moving average"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sema`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`SCRSEMA`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "单均线交叉策略——EMA均线(指数平滑移动均线)：根据股价与EMA均线的相对位置设定持仓比例"
msgstr "Single moving average cross strategy —— EMA moving average (exponential smoothing moving average): set the position ratio according to the relative position of the stock price and the EMA moving average"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "..."
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "完整的内置策略清单请见[参考文档](../references/4-build-in-strategy-blender.md)"
msgstr "Complete list of built-in strategies, please refer to [reference documents](../references/4-build-in-strategy-blender.md)"

#: ../../source/tutorials/4-build-in-strategies.md:76
msgid "如果需要查看每一个内置交易策略的详细解释，例如策略参数的含义、信号生成规则，可以查看每一个交易策略的`doc-string`："
msgstr "If you need to view a detailed explanation of each built-in trading strategy, such as the meaning of strategy parameters, signal generation rules, you can view the `doc-string` of each trading strategy:"

#: ../../source/tutorials/4-build-in-strategies.md:78
msgid "例如："
msgstr "For example:"

#: ../../source/tutorials/4-build-in-strategies.md:83
msgid "可以看到"
msgstr "You can see"

#: ../../source/tutorials/4-build-in-strategies.md:112
msgid "在`ipython`等交互式`python`环境中，也可以使用`?`来显示内置交易策略的详细信息，例如："
msgstr "In interactive `python` environments such as `ipython`, you can also use `?` to display detailed information about built-in trading strategies, for example:"

#: ../../source/tutorials/4-build-in-strategies.md:118
msgid "可以看到："
msgstr "You can see:"

#: ../../source/tutorials/4-build-in-strategies.md:163
msgid "多重策略以及策略组合"
msgstr "Combination of multiple strategies"

#: ../../source/tutorials/4-build-in-strategies.md:165
msgid "在`qteasy`中，一个`Operator`交易员对象可以同时运行多个交易策略。这些交易策略在运行的时候，都会分别提取各自所需的历史数据，独立生成不同的交易信号，这些交易信号会被组合成一组交易信号，统一执行。"
msgstr "In `qteasy`, an `Operator` trader object can run multiple trading strategies at the same time. When these trading strategies are running, they will extract the historical data they need separately, generate different trading signals independently, and these trading signals will be combined into a set of trading signals and executed uniformly."

#: ../../source/tutorials/4-build-in-strategies.md:167
msgid "利用这种特性，用户可以在一个交易员对象中同时运行多个各有侧重的交易策略，例如，一个交易策略监控个股的股价，根据股价产生择信号，第二个交易策略专门负责监控大盘走势，通过大盘走势决定整体仓位。第三个交易策略专门负责止盈止损，在特定时刻止损。最终的交易信号以第一个交易策略为主，但受到第二个策略的节制，必要时会被第三个策略完全控制。"
msgstr "Users can use this feature to run multiple trading strategies with different focuses in a trader object at the same time. For example, one trading strategy monitors the stock price of individual stocks and generates selection signals based on the stock price, the second trading strategy is specifically responsible for monitoring the trend of the broader market, and determines the overall position based on the trend of the broader market. The third trading strategy is specifically responsible for stop loss and stop profit, and stops loss at specific times. The final trading signal is mainly based on the first trading strategy, but is restrained by the second strategy, and will be completely controlled by the third strategy when necessary."

#: ../../source/tutorials/4-build-in-strategies.md:169
msgid "或者，用户也可以很容易地制定出一个“委员会”策略，在一个综合性策略中由多个策略独立地做出交易决策，最终的交易信号由所有子策略组成的”委员会“投票决定，投票的方式可以是简单多数、绝对多数、加权投票结果等等。"
msgstr "Or, users can easily formulate a \"committee\" strategy, in which multiple strategies independently make trading decisions in a comprehensive strategy, and the final trading signal is determined by the \"committee\" vote composed of all sub-strategies. The voting method can be simple majority, absolute majority, weighted voting results, etc."

#: ../../source/tutorials/4-build-in-strategies.md:171
msgid "上述交易策略组合中，每一个独立的交易策略都很简单，很容易定义，而将他们组合起来，又能发挥更大的作用。同时每一个子策略都是独立的，可以自由组合出复杂的综合性交易策略。这样可以避免不断地重复开发策略，只需要对子策略重新排列组合，重新定义组合方式，就可以快速地搭建一系列的复杂综合性交易策略。相信这样能够极大地提高交易策略的搭建效率，缩短周期。时间就是金钱。"
msgstr "Above the trading strategy combination, each independent trading strategy is very simple and easy to define, and combining them can play a greater role. At the same time, each sub-strategy is independent and can be freely combined into complex comprehensive trading strategies. This can avoid the continuous development of strategies, only need to rearrange and combine sub-strategies, redefine the combination method, you can quickly build a series of complex comprehensive trading strategies. I believe that this can greatly improve the efficiency of building trading strategies and shorten the cycle. Time is money."

#: ../../source/tutorials/4-build-in-strategies.md:173
msgid "不过，在一个`Operator`对象中，不同策略生成的交易信号可能运行的时机是不同的，例如，某些策略在开盘时运行，生成开盘价交易信号，而另一些策略在收盘前运行，生成的是收盘价交易信号，那么运行在不同时机的策略，生成的信号当然不应该混合。但只要是同时运行的交易策略生成的信号，都应该全部混合。"
msgstr "However, in an `Operator` object, the trading signals generated by different strategies may run at different times. For example, some strategies run at the opening, generating opening price trading signals, while others run before the closing, generating closing price trading signals. Then, the signals generated by strategies running at different times should not be mixed. But as long as the trading signals generated by the strategies running at the same time, they should all be mixed."

#: ../../source/tutorials/4-build-in-strategies.md:175
msgid "交易信号的混合即交易信号的各种运算或函数，从简单的逻辑运算、加减运算一直到复杂的自定义函数，只要能够应用于一个`ndarray`的函数，理论上都可以用于混合交易信号，只要最终输出的交易信号有意义即可。"
msgstr "Blending trading signals is a variety of operations or functions of trading signals, from simple logical operations, addition and subtraction operations to complex custom functions. As long as the function that can be applied to an `ndarray`, theoretically can be used for blending trading signals, as long as the final output trading signal is meaningful."

#: ../../source/tutorials/4-build-in-strategies.md:176
msgid "定义策略组合方式`blender`"
msgstr "Define strategy combination method `blender`"

#: ../../source/tutorials/4-build-in-strategies.md:178
msgid "`qteasy`中的组合策略是由`blender`实现的。在一个`Operator`中，如果策略的数量多于1个，就必须定义一个`blender`。如果没有明确定义`blender`，而策略的数量超过1个时，`qteasy`会在运行`Operator`的时候创建一个默认的`blender`，但是为了让多重策略正确运行，用户需要自行定义`blender`。"
msgstr "The combination strategy in `qteasy` is implemented by `blender`. In an `Operator`, if the number of strategies is more than 1, a `blender` must be defined. If the `blender` is not explicitly defined, and the number of strategies is more than 1, `qteasy` will create a default `blender` when running the `Operator`, but in order to make the multiple strategies run correctly, users need to define the `blender` themselves."

#: ../../source/tutorials/4-build-in-strategies.md:180
msgid ""
"`blender "
"expression`是用户自行定义的一个组合表达式，用户使用这个表达式确定不同交易策略的组合方式。这个组合表达式使用四则运算符、逻辑运算符、函数等符号规定策略信号是如何组合的。`blender`表达式中可以包括以下元素："
msgstr ""
"`blender "
"expression` is a combination expression defined by the user, and the user uses this expression to determine the combination method of different trading strategies. This combination expression uses arithmetic operators, logical operators, functions, and other symbols to specify how the strategy signals are combined. The following elements can be included in the `blender` expression:"

#: ../../source/tutorials/4-build-in-strategies.md:182
#: ../../source/tutorials/4-build-in-strategies.md:228
msgid "`blender`表达式中支持的函数如下："
msgstr "Following functions are supported in the `blender` expression:"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "元素"
msgstr "Element"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "示例"
msgstr "Example"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "策略序号"
msgstr "Strategy number"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`s0, s1...`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "以s开头，数字结尾的字符串，数字为`Operator`中的策略的序号，代表这个策略生成的交易信号"
msgstr "A string starting with s and ending with a number, the number is the serial number of the strategy in the `Operator`, representing the trading signal generated by this strategy"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "数字"
msgstr "Numbers"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`-1.35`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "任何合法的数字，参与表达式运算的数字"
msgstr "Any legal number, the number involved in the expression operation"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "运算符"
msgstr "Operators"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`+`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "包括`+ - * / ^`等数学运算符"
msgstr "Numerical operators including `+ - * / ^`"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "逻辑运算符"
msgstr "Logical operators"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`and`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "支持`&`/`~`以及`and`/`or`/`not`等逻辑运算符"
msgstr "Logical operators such as `&`/`~` and `and`/`or`/`not` are supported"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "函数"
msgstr "Functions"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sum()`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "表达式支持多种函数，支持的函数参见后表"
msgstr "Supported functions can be seen in the table below"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "括号"
msgstr "Parentheses"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`()`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "组合运算"
msgstr "Group operation"

#: ../../source/tutorials/4-build-in-strategies.md:194
msgid "`blender`示例"
msgstr "Example of `blender`"

#: ../../source/tutorials/4-build-in-strategies.md:196
msgid "当一个`Operator`对象中有三个交易策略时（其序号分别为`s0`/`s1`/`s2`），按照以下方式定义的`blender`都是合法可用的，同时使用`Operator.set_blender()`来设置`blender`："
msgstr "If there are three trading strategies in an `Operator` object (with serial numbers `s0`/`s1`/`s2`), the `blender` defined in the following ways is legal and available, and use `Operator.set_blender()` to set the `blender`："

#: ../../source/tutorials/4-build-in-strategies.md:198
msgid "使用四则运算符定义blender表达式"
msgstr "Blender expression defined using arithmetic operators"

#: ../../source/tutorials/4-build-in-strategies.md:200
msgid "`'s0 + s1 + s2'`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:202
msgid "此时三个交易策略生成的交易信号会被加起来，成为最终的交易信号，如果策略0的结果为买入10%，策略1结果为买入10%，策略2结果为买入30%，则最终的结果为买入50%"
msgstr "In this case the trading signals generated by the three trading strategies will be added up to become the final trading signal. If the result of strategy 0 is buy 10%, the result of strategy 1 is buy 10%, and the result of strategy 2 is buy 30%, then the final result is buy 50%"

#: ../../source/tutorials/4-build-in-strategies.md:204
msgid "使用逻辑运算符定义blender表达式："
msgstr "Blender expression defined using logical operators:"

#: ../../source/tutorials/4-build-in-strategies.md:206
msgid "`'s0 and s1 and s2'`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:208
msgid "表示只有当交易策略1、2、3都出现交易信号的时候，才会最终形成交易信号。如策略1的结果为买入，策略2结果为买入，而策略3没有交易信号，则最终的结果为没有交易信号。"
msgstr "In this case the final trading signal will only be formed when trading strategies 1, 2, and 3 all generate trading signals. For example, if the result of strategy 1 is buy, the result of strategy 2 is buy, and strategy 3 has no trading signal, then the final result is no trading signal."

#: ../../source/tutorials/4-build-in-strategies.md:210
msgid "blender表达式中还可以包含括号和一些函数："
msgstr "Blender expressions can also include parentheses and some functions:"

#: ../../source/tutorials/4-build-in-strategies.md:212
msgid "`'max(s0, s1) + s2'`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:214
msgid "表示策略1、2的结果中最大值与策略3的结果相加，成为最终交易信号。如果策略1的结果为买入10%，策略2结果为买入20%，策略3结果为买入30%，最终的结果为买入50%"
msgstr "Meaning the sum of the maximum value of the results of strategies 1 and 2 and the result of strategy 3 becomes the final trading signal. If the result of strategy 1 is buy 10%, the result of strategy 2 is buy 20%, and the result of strategy 3 is buy 30%, the final result is buy 50%"

#: ../../source/tutorials/4-build-in-strategies.md:216
msgid "blender 表达式中每个策略可以出现不止一次，也可以出现纯数字："
msgstr "A strategy can appear more than once in the blender expression, and pure numbers are also supported:"

#: ../../source/tutorials/4-build-in-strategies.md:218
msgid "`'(0.5 * s0 + 1.0 * s1 + 1.5 * s2) / 3 * min(s0, s1, s2)'`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:220
msgid "上面的`blender`表达式表示：首先计算三个策略信号的加权平均（权重分别为0.5、1.0、1.5），然后再乘以三个信号的最小值"
msgstr "Above `blender` expression means: first calculate the weighted average of the three strategy signals (weights are 0.5, 1.0, 1.5 respectively), and then multiply by the minimum value of the three signals"

#: ../../source/tutorials/4-build-in-strategies.md:222
msgid "blender 表达式中函数的操作参数在函数名中定义："
msgstr "Function parameters in the blender expression are defined in the function name:"

#: ../../source/tutorials/4-build-in-strategies.md:224
msgid "`'clip_-0.5_0.5(s0 + s1 + s2) + pos_2_0.2(s0, s1, s2)'`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:226
msgid "上面的`blender`表达式定义了两种不同的函数操作，分别得到结果后相加得到最终结果。第一个函数是范围剪切，将三组策略信号相加后，剪切掉小于-0.5的信号值以及大于0.5的信号值，得到计算结果；第二个函数是仓位判断函数，统计三组信号中持仓大于0.2的时间段，将其定义为“多头”，然后再统计每一个时间段三个策略中持多头建议的数量，如果超过两个策略持多头建议，则输出满仓多头，否则输出空仓。"
msgstr "Above `blender` expression defines two different function operations, and the final result is obtained by adding the results. The first function is range clipping, after adding the three sets of strategy signals, the signal values less than -0.5 and greater than 0.5 are clipped, and the calculation result is obtained; the second function is position judgment function, which counts the time periods in the three sets of signals with a position greater than 0.2, defines them as \"long positions\", and then counts the number of long position recommendations in the three strategies in each time period. If more than two strategies hold long position recommendations, the full position long position is output, otherwise the empty position is output."

#: ../../source/tutorials/4-build-in-strategies.md
msgid "表达式示例"
msgstr "Example of expression"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`abs`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`abs(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "绝对值函数<br />计算所有交易信号的绝对值<br />输入信号的数量不限"
msgstr "Absolute value function<br />Calculate the absolute value of all trading signals<br />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`avg`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`avg(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "平均值函数<br />计算所有交易信号的平均值<br />输入信号的数量不限"
msgstr "Average value function<br />Calculate the average value of all trading signals<br />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`avgpos`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`avgpos_N_T(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"平均值累计函数<br "
"/>当交易信号为持仓目标信号时，统计同一时间产生非空仓信号（输出信号绝对值>T）的个数，当空头/多头信号的数量大于N时，输出所有空头/多头信号的平均值，否则输出0.<br"
" />输入信号的数量不限"
msgstr ""
"Average cumulative function<br "
"/>When the trading signal is a position target signal, count the number of non-empty position signals (output signal absolute value > T) generated at the same time. When the number of short/long signals is greater than N, output the average value of all short/long signals, otherwise output 0.<br"
" />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`ceil`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`ceil(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "向上取整函数<br />交易信号向上取整<br />只能输入一个交易信号"
msgstr "Ceiing function<br />Trading signal rounding up<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`clip`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`clip_U_L(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "范围剪切函数<br />剪切超过范围的信号值，剪切上下范围在函数名中定义<br />只能输入一个交易信号"
msgstr "Clip function<br />Clip the signal value that exceeds the range, and define the upper and lower ranges in the function name<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`combo`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`combo(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "组合值函数<br />输出所有交易信号加总的值<br />输入信号的数量不限"
msgstr "Combo value function<br />Output the sum of all trading signals<br />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`committee`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`cmt_N_T(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"委员会函数（等同于累计持仓函数））<br "
"/>当交易信号为持仓目标信号时，统计同一时间产生非空仓信号（输出信号绝对值>T）的个数数，当多头/空头信号的数量大于N时，输出-1/1，否则输出0.<br"
" />输入信号的数量不限"
msgstr ""
"Committee function (equivalent to cumulative position function)<br "
"/>When the trading signal is a position target signal, count the number of non-empty position signals (output signal absolute value > T) generated at the same time. When the number of long/short signals is greater than N, output -1/1, otherwise output 0.<br"
" />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`exp`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`exp(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "exp函数<br />计算e的信号次幂<br />只能输入一个交易信号"
msgstr "exp function<br />Calculate the signal power of e<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`floor`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`floor(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "向下取整函数<br />交易信号向下取整<br />只能输入一个交易信号"
msgstr "Floor function<br />Trading signal rounding down<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`log`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`log(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "对数函数<br />计算以e为底的对数值<br />只能输入一个交易信号"
msgstr "Logarithm function<br />Calculate the logarithm value with e as the base<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`log10`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`log10(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "以10为底的对数函数<br />计算以10为底的对数值<br />只能输入一个交易信号"
msgstr "10-based logarithm function<br />Calculate the logarithm value with 10 as the base<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`max`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`max(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "最大值函数<br />计算所有交易信号的最大值<br />输入信号的数量不限"
msgstr "Maximum value function<br />Calculate the maximum value of all trading signals<br />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`min`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`min(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "最小值函数<br />计算所有交易信号的最小值<br />输入信号的数量不限"
msgstr "Minimum value function<br />Calculate the minimum value of all trading signals<br />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`pos`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`pos_N_T(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"累计持仓函数<br "
"/>当交易信号为持仓目标信号时，统计同一时间产生非空仓信号（输出信号绝对值>T）的个数数，当多头/空头信号的数量大于N时，输出-1/1，否则输出0.<br"
" />输入信号的数量不限"
msgstr ""
"Accumulated position function<br "
"/>When the trading signal is a position target signal, count the number of non-empty position signals (output signal absolute value > T) generated at the same time. When the number of long/short signals is greater than N, output -1/1, otherwise output 0.<br"
" />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`position`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`position_N_T(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`pow`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`pow(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "幂函数<br />计算第一个交易信号的第二个信号次幂即sig0^sig1<br />输入信号的数量只能为两个"
msgstr "Power function<br />Calculate the second signal power of the first trading signal, that is, sig0^sig1<br />The number of input signals can only be two"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`power`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`power(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sqrt`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sqrt(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "平方根函数<br />交易信号的平方根<br />只能输入一个交易信号"
msgstr "Square root function<br />Trading signal square root<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`str`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`str_T(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "强度累计函数<br />将所有交易信号加总，当信号强度超过T时，输出1，否则输出0<br />输入信号的数量不限"
msgstr "Strength cumulative function<br />Sum all trading signals, output 1 when the signal strength exceeds T, otherwise output 0<br />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`strength`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`strength_T(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sum`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`sum(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`unify`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`unify(s0)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "均一化函数<br />均一化交易信号，等比缩放同一行的交易信号使每一行的总和为1<br />只能输入一个交易信号"
msgstr "Uniform function<br />Normalize trading signals, scale trading signals in the same row proportionally to make the sum of each row 1<br />Only one trading signal can be entered"

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`vote`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid "`vote_N_T(s0, s1, s2)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md
msgid ""
"委员会投票函数（等同于累计持仓函数）<br "
"/>当交易信号为持仓目标信号时，统计同一时间产生非空仓信号（输出信号绝对值>T）的个数数，当多头/空头信号的数量大于N时，输出-1/1，否则输出0.<br"
" />输入信号的数量不限"
msgstr ""
"Vote function (equivalent to cumulative position function)<br "
"/>When the trading signal is a position target signal, count the number of non-empty position signals (output signal absolute value > T) generated at the same time. When the number of long/short signals is greater than N, output -1/1, otherwise output 0.<br"
" />The number of input signals is unlimited"

#: ../../source/tutorials/4-build-in-strategies.md:257
msgid "以下方法可以被用来设置或获取策略的`blender`"
msgstr "Following methods can be used to set or get the `blender` of the strategy"

#: ../../source/tutorials/4-build-in-strategies.md:259
msgid "`operator.set_blender(blender=None, price_type=None)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:260
msgid "设置`blender`，直接传入一个表达式`blender expression`，这个表达式会被自动解析后用于组合交易策略。"
msgstr "Setup `blender`, directly pass in an expression `blender expression`, this expression will be automatically parsed and used to combine trading strategies."

#: ../../source/tutorials/4-build-in-strategies.md:262
msgid "`operator.view_blender()`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:263
msgid ""
"查看`blender`, "
"注意此时为了便于人眼识别，混合器表达式中的策略代码`s0`,`s1`,`s2`会被自动替换为具体的策略ID，如下面例子所示："
msgstr ""
"View `blender`, "
"Note that in order to facilitate human eye recognition, the strategy code `s0`,`s1`,`s2` in the blender expression will be automatically replaced with the specific strategy ID, as shown in the following example:"

#: ../../source/tutorials/4-build-in-strategies.md:271
msgid "上面例子中的`s0`,`s1`,`s2`分别被`dma`、`macd`、`trix`代替，但如果`Operator`中包含多个相同的策略，它们会被自动分配不同的策略ID，以示区别："
msgstr "Above example `s0`,`s1`,`s2` are replaced by `dma`, `macd`, `trix`, but if the `Operator` contains multiple identical strategies, they will be automatically assigned different strategy IDs to distinguish:"

#: ../../source/tutorials/4-build-in-strategies.md:279
msgid "`blender`使用示例"
msgstr "Example of using `blender`"

#: ../../source/tutorials/4-build-in-strategies.md:281
msgid "下面使用一个例子来演示`blender`的工作方式："
msgstr "An example is used below to demonstrate how `blender` works:"

#: ../../source/tutorials/4-build-in-strategies.md:283
msgid "我们生成一个交易员对象，同时运行五个`DMA`交易策略，但五个交易策略分别有不同的可调参数，这时，我们可以理解为这个交易员同时运行五个同样的交易逻辑，但这五个交易逻辑被配置了不同的参数，因此在同样的输入条件下，产生不同的交易信号，意味着五个交易策略各有侧重，有的擅长于抓取长期变量，有的善于追踪短期趋势。"
msgstr "We generate a trader object and run five `DMA` trading strategies at the same time, but the five trading strategies have different adjustable parameters. At this time, we can understand that the trader runs five of the same trading logic at the same time, but these five trading logics are configured with different parameters, so under the same input conditions, different trading signals are generated, which means that the five trading strategies have their own emphasis, some are good at capturing long-term variables, and some are good at tracking short-term trends."

#: ../../source/tutorials/4-build-in-strategies.md:285
msgid "下面，同样是这五个交易策略，但我们会用三个不同的例子，来展示三种不同的混合方式，向您展示，即使完全相同的交易策略和交易参数，在同一段历史区间，不同的混合方式同样能影响最终的交易结果。"
msgstr "Now, the same five trading strategies, but we will use three different examples to show three different blending methods, to show you that even if the same trading strategy and trading parameters, in the same historical interval, different blending methods can also affect the final trading results."

#: ../../source/tutorials/4-build-in-strategies.md:287
msgid "第一种混合方式：加权平均混合"
msgstr "First blending method: Weighted average blending"

#: ../../source/tutorials/4-build-in-strategies.md:289
msgid "第一种混合方式将五个交易策略的结果进行加权平均，混合表达式如下，其中的权值可以自行调整："
msgstr "The first blending method takes the results of the five trading strategies and averages them, the blending expression is as follows, and the weights can be adjusted as needed:"

#: ../../source/tutorials/4-build-in-strategies.md:291
msgid "`(0.8*s0+1.2*s1+2*s2+0.5*s3+1.5*s4)/5`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:359
msgid "![png](../references/img/output_10_1.png)"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:359
#: ../../source/tutorials/4-build-in-strategies.md:430
#: ../../source/tutorials/4-build-in-strategies.md:490
msgid "png"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:361
msgid "如果仔细观察上面生成的收益曲线图，可以注意到图示的背景上绘制了深浅不同的绿色条纹，这些条纹代表该段时间段里的持仓比例，白色代表空仓持币，即完全不持有任何股票，而最深的绿色代表100%持股，介于中间的绿色代表0～100%之间的持股比例，持股比例越高，条纹的颜色越深。"
msgstr "Examine profit curve chart above carefully, and you will notice that the background of the chart is drawn with different shades of green stripes. These stripes represent the position ratio in that period of time. White represents an empty position, that is, not holding any stocks at all, and the darkest green represents 100% holding stocks. The green in the middle represents the position ratio between 0 and 100%, and the higher the position ratio, the darker the color of the stripes."

#: ../../source/tutorials/4-build-in-strategies.md:363
msgid "从图中可以看到，整个交易历史区间存在着深浅不一的绿色，如果您非常仔细地检查每一个持股区间，会发现这些区间的持股比例正好对应着当时五个交易策略的混合结果：当全部交易策略都\"一致决定\"全仓买入时，它们的加权平均结果就是100%买入，但只要有一个或多个策略决定持有空仓，最终加权平均的结果就是持有一定百分比的股票，这个百分比等于五个策略信号的加权平均结果。最终的结果就是持仓比例在0%～100%之间波动，完全空仓和完全满仓的时间都不长。"
msgstr "You can see from the chart that there are different shades of green in the entire trading history interval. If you examine each holding interval very carefully, you will find that the holding ratio of these intervals corresponds exactly to the blending results of the five trading strategies at that time: when all trading strategies \"decide unanimously\" to buy full position, the weighted average result is 100% buy, but as long as one or more strategies decide to hold an empty position, the final weighted average result is to hold a certain percentage of stocks, which is equal to the weighted average result of the five strategy signals. The final result is that the position ratio fluctuates between 0% and 100%, and the time of completely empty position and completely full position is not long."

#: ../../source/tutorials/4-build-in-strategies.md:365
msgid "这也意味着我们不能通过空仓来完全避免单边下跌行情，不过，始终保持一定仓位却能更好地抓住上升通道。"
msgstr "That also means that we cannot completely avoid one-way decline market by empty position, but always maintaining a certain position can better grasp the upward channel."

#: ../../source/tutorials/4-build-in-strategies.md:367
msgid "同时，您也应该可以观察到，由于仓位是灵活调整的，在单边下跌行情中的仓位（绿色的深浅幅度）明显更低，上涨行情仓位更高，这正是我们所期望的。"
msgstr "Meanwhile, you should also be able to observe that because the position is flexibly adjusted, the position (the depth of green) in the one-way decline market is obviously lower, and the position in the rising market is higher, which is exactly what we expect."

#: ../../source/tutorials/4-build-in-strategies.md:369
msgid "接下来，让我们来看下一种完全不同的混合方式："
msgstr "Next, let's take a look at a completely different blending method:"

#: ../../source/tutorials/4-build-in-strategies.md:371
msgid "第二种混合方式：委员会投票"
msgstr "Second blending method: Committee voting"

#: ../../source/tutorials/4-build-in-strategies.md:373
msgid "这种方式让同样五个交易策略组成一个\"委员会\"，通过平等投票来决定仓位，且仓位必须是\"非黑即白\"的两种结果之一：要么满仓，要么空仓。其表达式如下："
msgstr "This blender lets the same five trading strategies form a \"committee\" to determine the position through equal voting, and the position must be one of the two results of \"non-black or white\": either full position or empty position. The expression is as follows:"

#: ../../source/tutorials/4-build-in-strategies.md:375
msgid "`pos_3_0(s0, s1, s2, s3, s4)`"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:430
msgid "![png](../references/img/output_11_1.png)"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:432
msgid "您一定看到了，这一次的输出结果跟前一次有了很大区别：上一次回测时持仓是渐变的，而这一次是非黑即白的，要么是满仓，要么是纯粹空仓，您如果仔细分析交易日志，会发现只有当三个交易策略举手赞成满仓时，才会满仓，其余时间空仓。因此在单边下跌行情中的收益曲线是一条直线。但满仓时如果股票下跌，也没有办法通过适当减仓来降低损失。"
msgstr "You may already notice that the output result this time is very different from the previous one: the position was gradient in the last backtest, and this time it is non-black or white, either full position or purely empty position. If you carefully analyze the trading log, you will find that only when three trading strategies raise their hands to agree to full position, will it be full position, and the rest of the time is empty position. Therefore, the profit curve in the one-way decline market is a straight line. But if the stock falls when it is fully positioned, there is no way to reduce the loss by reducing the position appropriately."

#: ../../source/tutorials/4-build-in-strategies.md:434
msgid "接下来，我们仍然使用这个委员会，但是现在只要有两票投满仓时，最终就会满仓："
msgstr "Next, we still use this committee, but now as long as two votes are cast for full position, the final position will be full position:"

#: ../../source/tutorials/4-build-in-strategies.md:436
msgid "第三种混合方式：委员会投票"
msgstr "Third blending method: Committee voting"

#: ../../source/tutorials/4-build-in-strategies.md:490
msgid "![png](../references/img/output_12_1_2.png)"
msgstr ""

#: ../../source/tutorials/4-build-in-strategies.md:492
msgid "对比第二张图表和第三张图表，您可以发现，满仓的区间明显变长了，这是因为原来需要三张赞成票才能满仓的策略，现在只要两张赞成票就可以了，因此更容易出现满仓的结果"
msgstr "Compare the second chart and the third chart, you will find that the full position interval has obviously become longer, this is because the strategy that used to require three votes to be fully positioned, now only needs two votes, so it is easier to achieve full position"

#: ../../source/tutorials/4-build-in-strategies.md:494
msgid "本篇回顾"
msgstr "Recap"

#: ../../source/tutorials/4-build-in-strategies.md:496
msgid "好了，相信到了这里，您应该会对交易策略的混合有了一个基本的理解了。我们的教程还会继续，`qteasy`还有更多的方式实现您希望的交易策略，实际上，尽管`qteasy`的内核被设计为一个有利于高速回测和高速执行的向量化的策略内核，但仍然考虑到了足够的灵活性，理论上您可以实现您所设想的任何类型的交易策略。"
msgstr "Now, I believe that by now, you should have a basic understanding of blending trading strategies. Our tutorial will continue, and `qteasy` has more ways to achieve the trading strategy you want. In fact, although the kernel of `qteasy` is designed as a vectorized strategy kernel that is conducive to high-speed backtesting and high-speed execution, it still considers enough flexibility. In theory, you can implement any type of trading strategy you imagine."

#: ../../source/tutorials/4-build-in-strategies.md:498
msgid "同时，`qteasy`的回测框架也做了相当多的特殊设计，可以完全避免您无意中在交易策略中导入\"未来函数\"，确保您的交易策略在回测时完全基于过去的数据，同时也使用了很多预处理技术以及JIT技术对内核关键函数进行了编译，以实现不亚于C语言的运行速度。"
msgstr "Meanwhile, `qteasy`'s backtesting framework has also made quite a lot of special designs, which can completely avoid you inadvertently importing \"future functions\" into the trading strategy, ensuring that your trading strategy is completely based on past data during backtesting. At the same time, many preprocessing techniques and JIT techniques are used to compile the kernel key functions to achieve a running speed no less than that of C language."

#: ../../source/tutorials/4-build-in-strategies.md:500
msgid "不过，为了实现理论上无限可能的交易策略，仅仅使用内置交易策略以及策略混合就不一定够用了，一些特定的交易策略，或者一些特别复杂的交易策略是无法通过内置策略混合而成的，这就需要我们使用`qteasy`提供的`Strategy`基类，基于一定的规则创建一个自定义交易策略了。"
msgstr "However, in order to achieve theoretically infinite possible trading strategies, it may not be enough to use only built-in trading strategies and strategy blending. Some specific trading strategies, or some particularly complex trading strategies cannot be created by built-in strategy blending. This requires us to use the `Strategy` base class provided by `qteasy` to create a custom trading strategy based on certain rules."

#: ../../source/tutorials/4-build-in-strategies.md:502
msgid "在`qteasy`教程的下一节，我们将用一个例子来介绍如何创建一个自定义交易策略，如何定义策略的基本参数，如何定义策略所需的数据类型，如何设置交易信号的生成逻辑。。。"
msgstr "In the next section of the `qteasy` tutorial, we will use an example to introduce how to create a custom trading strategy, how to define the basic parameters of the strategy, how to define the data types required by the strategy, how to set the logic for generating trading signals..."

