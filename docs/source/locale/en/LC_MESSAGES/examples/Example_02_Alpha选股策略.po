# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Jackie PENG
# This file is distributed under the same license as the qteasy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qteasy 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-03 20:50+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/examples/Example_02_Alpha选股策略.md:1
msgid "Alpha选股交易策略"
msgstr "Alpha Stock Selection"

#: ../../source/examples/Example_02_Alpha选股策略.md:3
msgid "本策略每隔1个月定时触发计算SHSE.000300成份股的过去的EV/EBITDA并选取EV/EBITDA大于0的股票，随后平掉排名EV/EBITDA不在最小的30的股票持仓并等权购买EV/EBITDA最小排名在前30的股票"
msgstr "This strategy triggers every month to calculate the past EV/EBITDA of SHSE.000300 component stocks and selects stocks with EV/EBITDA greater than 0. Then, it closes the positions of stocks ranked in the smallest 30 of EV/EBITDA and equally purchases stocks ranked in the top 30 of the smallest EV/EBITDA."

#: ../../source/examples/Example_02_Alpha选股策略.md:5
msgid "回测数据为:SHSE.000300沪深300指数成份股"
msgstr "Backtest data: SHSE.000300 Shanghai and Shenzhen 300 Index component stocks"

#: ../../source/examples/Example_02_Alpha选股策略.md:7
msgid "回测时间为:2016-04-05 到 2021-02-01"
msgstr "Backtest time: 2016-04-05 to 2021-02-01"

#: ../../source/examples/Example_02_Alpha选股策略.md:16
msgid "在选股之前，需要检查需要的历史数据"
msgstr "Before stock selection, you need to check the required historical data"

#: ../../source/examples/Example_02_Alpha选股策略.md:18
msgid "EV/EBITDA数据并不直接存在于qteasy定义的数据类型中，需要通过几个数据组合计算出来"
msgstr "EV/EBITDA data does not exist directly in the data types defined by qteasy, and needs to be calculated through several data combinations"

#: ../../source/examples/Example_02_Alpha选股策略.md:20
msgid "EV/EBITDA = (Market Capitalization + Total Debt - Total Cash) / EBITDA"
msgstr "EV/EBITDA = (Market Capitalization + Total Debt - Total Cash) / EBITDA"

#: ../../source/examples/Example_02_Alpha选股策略.md:22
msgid "上面几个数据分别代表总市值、总负债、总现金及现金等价物，这些数据需要从`qteasy`内置的数据类型中分别提取，并使用上面的公式计算后，作为选股因子。排除掉小于0的因子后，将所有选股因子从小到大排列，选出因子排在最前的30支股票，将手中的全部资金平均分配投入到所有选中的股票中持有一个月，直到下一次选股为止。"
msgstr "Above data represent total market value, total liabilities, total cash and cash equivalents. These data need to be extracted from the built-in data types of `qteasy`, and calculated using the above formula as stock selection factors. After excluding factors less than 0, all stock selection factors are arranged from small to large, and the top 30 stocks with factors are selected. All funds are evenly distributed to all selected stocks and held for one month until the next stock selection."

#: ../../source/examples/Example_02_Alpha选股策略.md:24
msgid "我们可以通过下面的方法检查数据检查结果。"
msgstr "We can check the data check results through the following methods."

#: ../../source/examples/Example_02_Alpha选股策略.md:39
msgid "输出结果如下"
msgstr "Output results are as follows"

#: ../../source/examples/Example_02_Alpha选股策略.md:44
msgid "有了上面的数据定义，我们就可以创建这样的选股策略了。"
msgstr "We can create such a stock selection strategy with the above data definition."

#: ../../source/examples/Example_02_Alpha选股策略.md:46
msgid "实际上，我们可以使用好几种不同的方法实现同样的选股策略："
msgstr "In fact, we can use several different methods to achieve the same stock selection strategy:"

#: ../../source/examples/Example_02_Alpha选股策略.md:49
msgid "第一种自定义策略设置方法，使用持仓数据和选股数据直接生成比例交易信号PS信号："
msgstr "The first custom strategy setting method, using position data and stock selection data to directly generate proportional trading signals PS signals:"

#: ../../source/examples/Example_02_Alpha选股策略.md:50
msgid ""
"使用`GeneralStrategy`策略类，计算选股因子后，去掉所有小于零的因子，排序后提取排名前三十的股票 按以下逻辑生成交易信号： "
"1，检查当前持仓，如果持仓的股票不在选中的30个中间，则全数卖出 2，检查当前持仓，如果新选中的股票没有持仓，则等权买入新增选中的股票"
msgstr ""
"Use the `GeneralStrategy` strategy class to calculate the stock selection factor, remove all factors less than zero, sort and extract the top thirty stocks. Generate trading signals according to the following logic: 1. Check the current position. If the stocks in the position are not among the selected 30, sell them all. 2. Check the current position. If there is no position in the newly selected stocks, equally buy the newly selected stocks."

#: ../../source/examples/Example_02_Alpha选股策略.md:55
msgid "设置交易信号类型为`PS`，生成交易信号 由于生成交易信号需要用到持仓数据，因此不能使用批量生成模式，只能使用`stepwise`模式"
msgstr "Set the trading signal type to `PS`, generate trading signals. Since generating trading signals requires using position data, batch generation mode cannot be used, only `stepwise` mode can be used."

#: ../../source/examples/Example_02_Alpha选股策略.md:58
msgid "策略的定义如下"
msgstr "Strategy can be defined as follows"

#: ../../source/examples/Example_02_Alpha选股策略.md:98
msgid "创建一个`Operator`对象，并运行这个策略。"
msgstr "Create an `Operator` object and run this strategy."

#: ../../source/examples/Example_02_Alpha选股策略.md:100
msgid "由于策略使用了当前持仓数据，因此只能使用`stepwise`模式回测"
msgstr "Since the strategy uses the current position data, it can only be backtested in `stepwise` mode."

#: ../../source/examples/Example_02_Alpha选股策略.md:123
msgid "输出结果如下："
msgstr "Output results are as follows:"

#: ../../source/examples/Example_02_Alpha选股策略.md:190
msgid "![png](img/output_5_1_2.png)"
msgstr ""

#: ../../source/examples/Example_02_Alpha选股策略.md:190
#: ../../source/examples/Example_02_Alpha选股策略.md:327
#: ../../source/examples/Example_02_Alpha选股策略.md:462
msgid "png"
msgstr ""

#: ../../source/examples/Example_02_Alpha选股策略.md:194
msgid "第二种自定义策略设置方法，使用`PT`交易信号设置持仓目标："
msgstr "The second custom strategy setting method, using `PT` trading signal to set position target:"

#: ../../source/examples/Example_02_Alpha选股策略.md:196
msgid "在完成选股因子的计算之后，直接设置每个股票的持仓目标，这样就不需要使用知道持仓数据，直接输出持仓目标信号 ，在回测过程中根据实际持仓量生成交易信号。"
msgstr "After completing the calculation of stock selection factors, directly set the position target for each stock. This way, there is no need to know the position data, and the position target signal can be output directly. During the backtesting process, trading signals are generated based on the actual position."

#: ../../source/examples/Example_02_Alpha选股策略.md:233
msgid "生成一个Operator对象，运行回测"
msgstr "Create an Operator object and run the backtest"

#: ../../source/examples/Example_02_Alpha选股策略.md:258
#: ../../source/examples/Example_02_Alpha选股策略.md:393
msgid "回测结果如下："
msgstr "Backtest results are as follows:"

#: ../../source/examples/Example_02_Alpha选股策略.md:327
msgid "![png](img/output_7_1.png)"
msgstr ""

#: ../../source/examples/Example_02_Alpha选股策略.md:329
msgid "第三种自定义策略设置方法："
msgstr "The third custom strategy setting method:"

#: ../../source/examples/Example_02_Alpha选股策略.md:330
msgid ""
"使用`FactorSorter`策略类，直接生成交易策略的选股因子，再根据 "
"`FactorSorter`策略的选股参数实现选股，本质上与第二种方式相同，但是 可以大大减少代码量"
msgstr ""
"Use the `FactorSorter` strategy class to directly generate the stock selection factor of the trading strategy, and then implement stock selection according to the stock selection parameters of the `FactorSorter` strategy. In essence, it is the same as the second method, but it can greatly reduce the amount of code."

#: ../../source/examples/Example_02_Alpha选股策略.md:334
msgid "设置交易信号类型为`PT`，生成持仓目标，自动生成交易信号"
msgstr "Set the trading signal type to `PT`, generate position target, and automatically generate trading signals"

#: ../../source/examples/Example_02_Alpha选股策略.md:359
msgid "同样创建一个`Operator`对象，回测交易策略 注意这个交易策略需要更多的参数用于因子选股："
msgstr "Create an `Operator` object, backtest the trading strategy. Note that this trading strategy requires more parameters for factor stock selection:"

#: ../../source/examples/Example_02_Alpha选股策略.md:362
msgid "`max_sel_count=30`   设置选股数量，最多选出30个股票"
msgstr "`max_sel_count=30` Set the number of stocks selected, up to 30 stocks"

#: ../../source/examples/Example_02_Alpha选股策略.md:363
msgid "`condition='greater'`   设置筛选条件，仅筛选因子大于`ubound`的股票"
msgstr "`condition='greater'` Set the screening condition, only filter stocks with factors greater than `ubound`"

#: ../../source/examples/Example_02_Alpha选股策略.md:364
msgid "`ubound=0.0`   设置筛选条件，仅筛选因子大于0的股票"
msgstr "`ubound=0.0` Set the screening condition, only filter stocks with factors greater than 0"

#: ../../source/examples/Example_02_Alpha选股策略.md:365
msgid "`weighting='even'`   设置股票权重，所有选中的股票平均分配权重"
msgstr "`weighting='even'` Set stock weight, all selected stocks are evenly distributed weight"

#: ../../source/examples/Example_02_Alpha选股策略.md:366
msgid "`sort_ascending=True`   设置排序方式，因子从小到大排序选择头30名"
msgstr "`sort_ascending=True` Set the sorting method, sort the factors from small to large and select the top 30"

#: ../../source/examples/Example_02_Alpha选股策略.md:462
msgid "![png](img/output_9_1.png)"
msgstr ""

